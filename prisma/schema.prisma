generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comments {
  id        Int      @id @default(autoincrement())
  content   String?  @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
  postId    Int?
  userId    Int?
  Posts     Posts?   @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Comments_ibfk_1")
  Users     Users?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Comments_ibfk_2")

  @@index([postId], map: "postId")
  @@index([userId], map: "userId")
}

model Posts {
  id        Int        @id @default(autoincrement())
  title     String?    @db.VarChar(255)
  content   String?    @db.VarChar(255)
  imgFile   String?    @db.VarChar(255)
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @db.Timestamp(0)
  userId    Int?
  Comments  Comments[]
  Users     Users?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Posts_ibfk_1")

  @@index([userId], map: "userId")
}

model Users {
  id         Int        @id @default(autoincrement())
  username   String     @unique(map: "username") @db.VarChar(255)
  email      String     @unique(map: "email") @db.VarChar(255)
  password   String     @db.VarChar(255)
  imgProfile String     @default("http://127.0.0.1:3000/images/avatars/user_default.jpg") @db.VarChar(255)
  admin      Int?       @default(0)
  createdAt  DateTime   @default(now()) @db.Timestamp(0)
  updatedAt  DateTime   @default(now()) @db.Timestamp(0)
  Comments   Comments[]
  Posts      Posts[]
}
